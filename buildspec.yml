version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - export AWS_DEFAULT_REGION=us-east-1
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - export IMAGE_TAG="$(git rev-parse HEAD | head -c 10)"
  build:
    commands:
      - echo Build started on `date`
      - echo Building ${IMAGE_REPO_NAME}:${IMAGE_TAG} container image...
      - docker build -t ${IMAGE_REPO_NAME}:$IMAGE_TAG .
      - docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Tagging remotely
      - aws eks update-kubeconfig --name ${CLUSTER_NAME} --role-arn ${EKS_KUBECTL_ROLE_ARN}
      - echo Updating deployment image for ${DEPLOYMENT_NAME} in ${CLUSTER_NAME} EKS Cluster
      - kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_CONTAINER_NAME=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG} -n ${DEPLOYMENT_NAMESPACE}
      - echo Deployment image updated
